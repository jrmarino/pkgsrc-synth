$NetBSD: patch-CMakeLists.txt,v 1.4 2016/05/21 10:50:41 bouyer Exp $

--- CMakeLists.txt.orig	2016-02-03 18:44:17.000000000 +0100
+++ CMakeLists.txt	2016-05-21 12:06:28.121554591 +0200
@@ -81,7 +81,6 @@
     #    SET (PACKAGE_DEPS  "wxGTK mesa-libGLU mesa-libGL gettext zlib bzip2 portaudio")
     IF (CMAKE_SIZEOF_VOID_P MATCHES "8")
       SET (ARCH "x86_64")
-      SET (LIB_INSTALL_DIR "lib64")
     ELSE (CMAKE_SIZEOF_VOID_P MATCHES "8")
       SET (ARCH "i386")
       SET (LIB_INSTALL_DIR "lib")
@@ -92,7 +91,6 @@
     #    SET (PACKAGE_DEPS  "libwx_baseu-2_8-0-wxcontainer MesaGLw libbz2-1 portaudio")
     IF (CMAKE_SIZEOF_VOID_P MATCHES "8")
       SET (ARCH "x86_64")
-      SET (LIB_INSTALL_DIR "lib64")
     ELSE (CMAKE_SIZEOF_VOID_P MATCHES "8")
       SET (ARCH "i386")
       SET (LIB_INSTALL_DIR "lib")
@@ -282,7 +280,7 @@
 
 # Search for opengles, short of running a program to test the speed
 # of acceleration, I simply use gles on "native linux" arm systems
-IF (ARCH MATCHES "arm*" AND (NOT QT_ANDROID) )
+IF (ARCH MATCHES "arm*" AND (NOT QT_ANDROID) AND CMAKE_SYSTEM_NAME MATCHES ".*Linux" )
   find_path(OPENGLESv1_INCLUDE_DIR GLES/gl.h )
   IF (OPENGLESv1_INCLUDE_DIR)
     MESSAGE (STATUS "Found OpenGLESv1")
@@ -1755,9 +1753,10 @@
 
 #   Certain older Cmake FindGTK2 modules ( e.g. cmake-2.8.0-2) do not yield all of the required link libraries
 #   So, add them manually.  These declarations may be redundant in some architectures, but do no harm.
-IF(UNIX)
-TARGET_LINK_LIBRARIES( ${PACKAGE_NAME} dl )
-ENDIF(UNIX)
+IF(CMAKE_SYSTEM_NAME MATCHES ".*Linux")
+  TARGET_LINK_LIBRARIES( ${PACKAGE_NAME} dl )
+  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--export-dynamic")
+ENDIF(CMAKE_SYSTEM_NAME MATCHES ".*Linux")
 
 IF(QT_LINUX)
   TARGET_LINK_LIBRARIES( ${PACKAGE_NAME} Qt5Widgets Qt5OpenGL Qt5Gui Qt5Test Qt5Core )
