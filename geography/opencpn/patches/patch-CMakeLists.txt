$NetBSD: patch-CMakeLists.txt,v 1.5 2017/04/14 16:20:15 bouyer Exp $

--- CMakeLists.txt.orig	2017-04-02 05:17:09.000000000 +0200
+++ CMakeLists.txt	2017-04-14 13:06:55.000000000 +0200
@@ -99,7 +99,6 @@
     ELSE (CMAKE_SYSTEM_PROCESSOR MATCHES "arm*")
       IF (CMAKE_SIZEOF_VOID_P MATCHES "8")
         SET (ARCH "x86_64")
-        SET (LIB_INSTALL_DIR "lib64")
       ELSE (CMAKE_SIZEOF_VOID_P MATCHES "8")
         SET (ARCH "i386")
         SET (LIB_INSTALL_DIR "lib")
@@ -318,7 +317,7 @@
 
 # Search for opengles, short of running a program to test the speed
 # of acceleration, I simply use gles on "native linux" arm systems
-IF (ARCH MATCHES "arm*" AND (NOT QT_ANDROID) )
+IF (ARCH MATCHES "arm*" AND (NOT QT_ANDROID) AND CMAKE_SYSTEM_NAME MATCHES ".*Linux" )
   find_path(OPENGLESv1_INCLUDE_DIR GLES/gl.h )
   IF (OPENGLESv1_INCLUDE_DIR)
     MESSAGE (STATUS "Found OpenGLESv1")
@@ -1861,10 +1860,10 @@
 
 #   Certain older Cmake FindGTK2 modules ( e.g. cmake-2.8.0-2) do not yield all of the required link libraries
 #   So, add them manually.  These declarations may be redundant in some architectures, but do no harm.
-IF(UNIX)
-TARGET_LINK_LIBRARIES( ${PACKAGE_NAME} dl )
-ENDIF(UNIX)
-
+IF(CMAKE_SYSTEM_NAME MATCHES ".*Linux")
+  TARGET_LINK_LIBRARIES( ${PACKAGE_NAME} dl )
+  SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--export-dynamic")
+ENDIF(CMAKE_SYSTEM_NAME MATCHES ".*Linux")
 
 IF( UNIX AND NOT APPLE )
     FIND_PATH( LIBELF_INCLUDE_DIR NAMES libelf.h gelf.h PATH_SUFFIXES libelf )
