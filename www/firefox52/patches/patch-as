$NetBSD: patch-as,v 1.2 2018/07/30 12:23:11 jmcneill Exp $

* Treat DragonFly like FreeBSD.
* Add system ICU support
* Enable ARM64 JIT

--- js/src/old-configure.in.orig	2017-04-11 02:13:16.000000000 +0000
+++ js/src/old-configure.in
@@ -140,6 +140,9 @@ fi
 
 MOZ_TOOL_VARIABLES
 
+AC_PROG_CPP
+AC_PROG_CXXCPP
+
 dnl Special win32 checks
 dnl ========================================================
 
@@ -957,6 +960,9 @@ arm*-*)
     ENABLE_ION=1
     AC_DEFINE(JS_CPU_ARM)
     ;;
+aarch64*-*)
+    ENABLE_ION=1
+    ;;
 sparc-*)
 dnl ENABLE_ION=0
     AC_DEFINE(JS_CPU_SPARC)
@@ -1024,7 +1030,7 @@ dnl Checks for header files.
 dnl ========================================================
 AC_HEADER_DIRENT
 case "$target_os" in
-freebsd*)
+freebsd*|*-*-dragonfly*)
 # for stuff like -lXshm
     CPPFLAGS="${CPPFLAGS} ${X_CFLAGS}"
     ;;
@@ -1155,7 +1161,7 @@ then
     fi
 
 	case "$target" in
-	    *-*-freebsd*)
+	    *-*-freebsd*|*-*-dragonfly*)
 			AC_DEFINE(_REENTRANT)
 			AC_DEFINE(_THREAD_SAFE)
 			dnl -pthread links in -lpthread, so don't specify it explicitly.
@@ -1755,6 +1761,9 @@ elif test "$CPU_ARCH" = "arm"; then
 
     dnl ARM platforms may trap on unaligned accesses; catch the signal and
     dnl recover.
+elif test "$CPU_ARCH" = "aarch64"; then
+    AC_DEFINE(JS_CODEGEN_ARM64)
+    JS_CODEGEN_ARM64=1
 elif test "$CPU_ARCH" = "mips32"; then
     AC_DEFINE(JS_CODEGEN_MIPS32)
     JS_CODEGEN_MIPS32=1
